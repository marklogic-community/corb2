/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        //Needed for CorbTask to dynamically generate properties from CoRB Options class
        classpath "com.marklogic:marklogic-corb:${corbVersion}"
        classpath "com.marklogic:ml-gradle:${mlGradleVersion}"
    }
}

plugins {id 'com.marklogic.ml-gradle' version "${mlGradleVersion}"}

repositories {
    mavenLocal()
    mavenCentral()
}
configurations {
    // This configuration captures the dependencies for running corb (Content Reprocessing in Bulk).
    // This is only needed if you want to run corb via Gradle tasks.
    // If you do, using com.marklogic.gradle.task.CorbTask is a useful starting point, as shown below.
    corb
}

dependencies {
    // required to run CoRB2
    corb "com.marklogic:marklogic-corb:${corbVersion}"
    // optional
    corb 'org.jasypt:jasypt:1.9.2' // necessary to leverage JasyptDecrypter
}

ext {
    // XCC URL for running corb task below
    contentXccUrl = "${xccProtocol}://${mlUsername}:${mlPassword}@${mlHost}:${mlRestPort}"
}

/*
 * This is an example of both a custom Gradle task and an easy way of invoking Corb.
 *
 * Since a custom configuration named "corb" is defined above, the classpath is automatically set.
 *
 * Any of the CoRB2 options can be set for the task several ways:
 * 1.) Properties of the task with a lowerCamelCased naming convention
 *     (i.e. the CoRB2 option THREAD-COUNT is threadCount)
 * 2.) Project properties with the naming convention of a "corb" prefix and the UpperCamelCased
 *     option name (i.e. the CoRB2 option THREAD-COUNT is corbThreadCount and can
 *     be specified on the commandline as -PcorbThreadCount=12)
 * 3.) System properties with the CoRB2 option name. (i.e. THREAD-COUNT can be set on the commandline as
 *       -DTHREAD-COUNT=16)
 *
 * A complete list of CoRB2 options can be found at: https://github.com/marklogic/corb2#options
 *
 * Examples of how to invoke corb and set options:
 * 1.) specify options from a properties file using the CoRB2 OPTIONS-FILE option
 *     gradle corb -PcorbOptionsFile=src/main/ml-modules/ext/corb2-project/corb/options.properties
 * 2.) Set corb project properties on the commandline
 *     gradle corb -PcorbUrisModule="src/main/ml-modules/ext/corb2-project/uris.xqy|ADHOC" -PcorbProcessModule="src/main/ml-modules/ext/corb2-project/corb/transform.xqy|ADHOC"
 * 3.) Set CoRB2 options as System properties on the commandline
 *     gradle corb -DURIS-MODULE="src/main/ml-modules/ext/corb2-project/uris.xqy|ADHOC" -DPROCESS-MODULE="src/main/ml-modules/ext/corb2-project/corb/transform.xqy|ADHOC"
 */
task corb(type: com.marklogic.gradle.task.CorbTask) {
    /* Either uncomment and set the xccConnectionUri below and set an appropriate XCC connection string,
     * or specify on the commandline as a project property: -PcorbXccConnectionUri=xcc://user:pass@host:port/content-database
     * or specify as a System property: -DXCC-CONNECTION-URI=xcc://user:pass@host:port/content-database
     * or instread of setting the XCC-CONNECTION-URI, set the individual XCC options
     * (XCC-HOSTNAME, XCC-PORT, XCC-USERNAME, XCC-PASSWORD, XCC-DBNAME)
     */
    xccConnectionUri = contentXccUrl
}

task copyLibs(type: Copy) {
    into 'build/lib'
    from configurations.corb
}

task createCorbShell() {
    dependsOn copyLibs
    doLast {
        File shell = new File('corb.sh')
        shell.withWriter('UTF-8') {
            it.writeLine("#! /bin/sh")
            it.writeLine('java -cp "build/lib/*" $@ com.marklogic.developer.corb.Manager ' + "${contentXccUrl}")
        }
        ant.chmod(file: shell.path, perm: "+x")
    }
}

task createCorbBatch() {
    dependsOn copyLibs
    doLast {
        new File('corb.bat').withWriter('UTF-8') {
            it.writeLine('java -cp "build/lib/*" %* com.marklogic.developer.corb.Manager ' + "${contentXccUrl}")
            it.writeLine('pause')
        }
    }
}

task setup() {
    dependsOn 'mlDeploy'
    dependsOn 'createCorbShell'
    dependsOn 'createCorbBatch'
}

task clean() {
    doLast() {
        delete 'build'
        delete 'corb.bat'
        delete 'corb.sh'
    }
}

task teardown() {
    dependsOn 'clean'
    dependsOn 'mlUndeploy'
}
