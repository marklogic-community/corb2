# An inline XQuery module that generates sequence of documents and returns the count and URIs
URIS-MODULE=INLINE-XQUERY|let $uris := (1 to 100) ! ( let $uri := "/schema-validation-job/"||sem:uuid-string()||".xml" return (xdmp:document-insert($uri, <BenefitEnrollmentRequest xmlns='http://bem.corb.developer.marklogic.com'>{$uri}</BenefitEnrollmentRequest>), $uri )) return (count($uris), $uris)

# The process module is invoked for each of the URIs produced by the URIS-MODULE
#  this XQuery module simply returns the document, which will be validated by the process task
PROCESS-MODULE=INLINE-XQUERY|declare variable $URI as xs:string external; fn:doc($URI)
# This task will validate the documents returned from the PROCESS-MODULE
PROCESS-TASK=com.marklogic.developer.corb.SchemaValidateToFileTask
# thec XML schema to validate the XML files
XML-SCHEMA=../src/test/resources/streamingXMLUrisLoader/BenefitEnrollment.xsd
# where to write the validation errors, each document with it's own corresponding validation report
EXPORT-FILE-DIR=build
# cleanup
POST-BATCH-MODULE=INLINE-XQUERY|cts:uris("",(),cts:directory-query("/schema-validation-job/")) ! xdmp:document-delete(.)
